name: OCI Dev Deployment

on:
  #To trigger manually
  workflow_dispatch:
  push:
    branches: [oci-development]

env:
  ENVIRONMENT: ocidev

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_NON_PROD_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_NON_PROD_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_NON_PROD_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_NON_PROD_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_NON_PROD_CLI_REGION }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: oci-development
      - name: Setting up Java
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "oracle"
      # - name: Building commons
      #   working-directory: ./commons
      #   run: mvn clean install
      # - name: Building commons-jooq
      #   working-directory: ./commons-jooq
      #   run: mvn clean install
      # - name: Building commons-security
      #   working-directory: ./commons-security
      #   run: mvn clean install
      # - name: Building commons-mongo
      #   working-directory: ./commons-mongo
      #   run: mvn clean install
      # - name: Building commons-mq
      #   working-directory: ./commons-mq
      #   run: mvn clean install
      - name: Building config
        working-directory: ./config
        run: mvn clean install
      # - name: Building eureka
      #   working-directory: ./eureka
      #   run: mvn clean install
      # - name: Building gateway
      #   working-directory: ./gateway
      #   run: mvn clean install
      # - name: Building security
      #   working-directory: ./security
      #   run: mvn clean install
      # - name: Building ui
      #   working-directory: ./ui
      #   run: mvn clean install
      # - name: Building files
      #   working-directory: ./files
      #   run: mvn clean install
      # - name: Building core
      #   working-directory: ./core
      #   run: mvn clean install
      # - name: Building multi
      #   working-directory: ./multi
      #   run: mvn clean install
      - name: Login to OCIR
        uses: docker/login-action@v3
        with:
          registry: ocir.us-ashburn-1.oci.oraclecloud.com
          username: ${{ secrets.OCI_NON_PROD_DOCKER_USER_NAME }}
          password: ${{ secrets.OCI_NON_PROD_CLI_AUTH_TOKEN }}
      - name: Docker version
        id: dockerVersion
        run: |
          VERSION=$(date '+%Y%m%d%H%M%S')
          echo "Setting version to ${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Pushing Config Docker Image to OCI
        working-directory: ./config
        run: |
          echo "--> Pulling Java Image"
          docker pull openjdk:21-ea-jdk-oracle
          echo "--> Building Docker Image"
          docker build -t dev-config-server:latest -t dev-config-server:${{ steps.dockerVersion.outputs.VERSION }} --build-arg profileName=${ENVIRONMENT} .
          echo "--> Tagging Docker Image"
          docker tag dev-config-server:${{ steps.dockerVersion.outputs.VERSION }} ocir.us-ashburn-1.oci.oraclecloud.com/idfmutpuhiky/dev-config-server:${{ steps.dockerVersion.outputs.VERSION }}
          echo "--> Pushing Docker Image"
          docker push ocir.us-ashburn-1.oci.oraclecloud.com/idfmutpuhiky/dev-config-server:${{ steps.dockerVersion.outputs.VERSION }}

      # - name: Uploading Config Server Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --debug --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/config.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./config/target/config-1.1.0.jar"
      #     silent: false
      # - name: Uploading Core Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/core.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./core/target/core-1.1.0.jar"
      #     silent: false
      # - name: Uploading Multi Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/multi.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./multi/target/multi-2.0.0.jar"
      #     silent: false
      # - name: Uploading UI Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/ui.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./ui/target/ui-1.1.0.jar"
      #     silent: false
      # - name: Uploading Files Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/files.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./files/target/files-2.0.0.jar"
      #     silent: false
      # - name: Uploading Eureka Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/eureka.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./eureka/target/eureka-1.1.0.jar"
      #     silent: false
      # - name: Uploading Gateway Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/gateway.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./gateway/target/gateway-1.1.0.jar"
      #     silent: false
      # - name: Uploading Security Artifact
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   with:
      #     command: "artifacts generic artifact upload-by-path --repository-id ocid1.artifactrepository.oc1.iad.0.amaaaaaay56thcya6tk7rwxpcddbb4slxr2bu2oyxpk6eixky2of7t6cngvq --artifact-path nclc/development/security.jar --artifact-version ${{ steps.artifactVersionStep.outputs.VERSION }} --content-body ./security/target/security-1.1.0.jar"
      #     silent: false
